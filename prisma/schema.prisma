// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // For MySQL
  // previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Category {
  id         String      @id @default(uuid())
  name       String
  characters Character[]
}

model Character {
  id              String @id @default(uuid())
  userId          String
  userName        String
  name            String @db.Text
  description     String
  instructions    String @db.Text
  imageUrl        String
  seed            String @db.Text
  backgroundstory String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
  messages   Message[]

  // For MySQL
  // @@fulltext([name])
}

enum Role {
  user
  system
}

model Message {
  id        String   @id @default(uuid())
  role      Role
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  characterId String
  userId      String
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
}

model UserSubscription {
  id                     String    @id @default(uuid())
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @unique @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @unique @map(name: "stripe_current_period_end")
}
